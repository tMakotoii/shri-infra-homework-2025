name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (e.g., 5)"
        required: true

env:
  IMAGE: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Login to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_SA_KEY }}

      - name: Check if image exists
        run: |
          IMAGE_TAG="${{ github.event.inputs.release_version }}_latest"
          echo "Checking image: $IMAGE:$IMAGE_TAG"
          docker manifest inspect $IMAGE:$IMAGE_TAG > /dev/null; 

          if [ $? -ne 0 ]; then
            echo "❌ Image with tag $IMAGE_TAG not found in registry"
            exit 1
          fi

      - name: Deploy to Production VM over SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            IMAGE="cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app"
            docker login --username json_key --password '${{ secrets.YC_SA_KEY }}' cr.yandex
            docker pull $IMAGE:${{ github.event.inputs.release_version }}_latest
            docker stop app || true
            docker rm app || true
            docker run -d --name app -p 80:3000 $IMAGE:${{ github.event.inputs.release_version }}_latest

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Find related release issue
        id: find_issue
        env:
          GH_TOKEN: ${{ secrets.GIT_ISSUE_TOKEN }}
        run: |
          ISSUE=$(gh issue list --state open --limit 100 --json number,title | jq -r --arg TITLE "Release ${{ github.event.inputs.release_version }}" '.[] | select(.title == $TITLE) | .number' | head -n1)
          echo "issue_number=$ISSUE" >> $GITHUB_OUTPUT

      - name: Add comment to release issue
        if: steps.find_issue.outputs.issue_number != ''
        env:
          GH_TOKEN: ${{ secrets.GIT_ISSUE_TOKEN }}
        run: |
          echo "**✅ Deployed to Production**" > comment.txt
          echo "**Date:** $(date -u)" >> comment.txt
          echo "**By:** ${{ github.actor }}" >> comment.txt
          gh issue comment ${{ steps.find_issue.outputs.issue_number }} --body-file comment.txt
